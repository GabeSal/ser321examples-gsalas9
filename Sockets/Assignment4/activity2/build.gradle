plugins {
  id 'java'
  id "com.google.protobuf" version "0.8.13" apply true
}

description = "Protocol Buffers Socket Example"

repositories {
    mavenCentral()
}

// json and protobuf dependencies 
dependencies {
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.18.0'
}
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.1'
    }
    generateProtoTasks {
    all().each { task ->
      task.builtins {
      }
    }
  }
}

// task reading in the arguments if any given, if not the default from above will be used
task arguments {
    if (project.hasProperty("host")) {
      host = project.getProperty("host")
    }
    if (project.hasProperty("port")) {
      port = project.getProperty("port")
    }
}

//gradle runClient -Pport=9099 -Phost='localhost'
tasks.register('runClient', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = "Run Client"
    mainClass = 'client.SockBaseClient'
    standardInput = System.in
    // run with arguments e.g.: gradle runClient -Phost=localhost -Pport=9099
    if (project.hasProperty('host') && project.hasProperty('port')) {
        args(project.getProperty('host'), project.getProperty('port'));
    }
}

//gradle runServer -Pport=9099
tasks.register('runServer', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = "Run Server"
    mainClass = 'server.SockBaseServer'
    // run with arguments e.g.: gradle runServer -Pport=9000
    if (project.hasProperty('port')) {
        args(project.getProperty('port'));
    }
}


