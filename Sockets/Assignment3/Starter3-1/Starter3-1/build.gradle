apply plugin: 'java'

description = "Client Server Socket Example"

repositories {
  mavenCentral()
}

dependencies{
  implementation 'junit:junit:4.13.1'
  implementation 'org.json:json:20171018' // org.json
}

def port = "8888"
def host = "localhost"

// Client and Server socket, socket can serve up to three clients
// The port is defined directly in the Java files. For practice consider changing
// the tasks to add the port as input to the Gradle task
tasks.register('runServer', JavaExec) {
  group 'TCP Server/Client'
  description 'Creates Server socket waits for up to 3 messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'SockServer'

  if (project.hasProperty("port")) {
    port = project.getProperty("port")
  }

  args port
}

tasks.register('runClient', JavaExec) {
  group 'TCP Server/Client'
  description 'Creates client socket sends a message and number to server'

  standardInput = System.in
  classpath = sourceSets.main.runtimeClasspath

  main = 'SockClient'

  if (project.hasProperty("host") && project.hasProperty("port")) {
    host = project.getProperty("host")
    port = project.getProperty("port")
  }

  args host
  args port
}

tasks.register('localTest', Test) {
  include '**/Testing.*'
}

tasks.register('serverTest', Test) {
  include '**/ServerTest.*'
}